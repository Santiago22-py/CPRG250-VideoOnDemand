import os
from pathlib import Path
import psycopg2

'''
CPRG 250 - Video on demand
Description: This script takes the csv files from a folder and uses them to populate the respective tables
Generated by Chat GPT, tweaked by Joao Santiago
'''



CSV_FOLDER = Path("C:/Path/To/The/Csvs") #ADD THE PATH TO THE FOLDER CONTAINING THE CSVS (USE FORWARD SLASH "/")

if not CSV_FOLDER.exists():
    raise SystemExit(f"CSV_FOLDER not found: {CSV_FOLDER}")

# Load order: parents first, then bridges/children
LOADS = [
    ("movies",        ["movie_id","title","duration_min","rating_code","sd_price","hd_price","is_new_release","is_most_popular","is_coming_soon"]),
    ("category",      ["category_id","category_name","parent_category_id"]),
    ("advisory",      ["advisory_id","short_desc","full_desc"]),
    ("stars",         ["star_id","star_first_name","star_last_name","star_dob","star_email"]),
    ("customers",     ["customer_id","customer_first_name","customer_last_name","customer_email","street","city","province","postal_code","phone","default_card_number","default_card_type"]),
    ("moviescategory",["movie_id","category_id"]),
    ("moviesadvisory",["movie_id","advisory_id"]),
    ("moviesstars",   ["movie_id","star_id","star_role_type","star_role_name"]),
    ("rentals",       ["rental_id","customer_id","movie_id","date_rented","date_watched","date_expires","rental_amount","credit_card_number","credit_card_type","customer_rating"]),
    ("wishlist",      ["movie_id","customer_id","date_added"]),
]

# Sequences to reset: (table, pk_column)
SEQS = [
    ("movies","movie_id"),
    ("category","category_id"),
    ("advisory","advisory_id"),
    ("stars","star_id"),
    ("customers","customer_id"),
    ("rentals","rental_id"),
]

def copy_csv(cur, table, cols, path: Path):
    if not path.exists():
        raise FileNotFoundError(f"Missing CSV: {path}")
    with open(path, "r", encoding="utf-8") as f:
        cur.copy_expert(
            f"COPY {table} ({', '.join(cols)}) FROM STDIN WITH (FORMAT csv, HEADER true, NULL '')",
            f
        )

def main(): #You know the drill, replace the data
    conn = psycopg2.connect(
    host="localhost",
    port=5432,
    dbname="DB_NAME",
    user="postgres",
    password="PASSWORD"
)
    conn.autocommit = False
    try:
        with conn, conn.cursor() as cur:
            # TRUNCATE everything and reset identities so there are no PK collisions
            cur.execute("""
                TRUNCATE TABLE
                  wishlist,
                  rentals,
                  moviesstars,
                  moviesadvisory,
                  moviescategory,
                  customers,
                  stars,
                  advisory,
                  category,
                  movies
                RESTART IDENTITY CASCADE;
            """)

            # Load in FK-safe order
            for table, cols in LOADS:
                csv_path = CSV_FOLDER / f"{table}.csv"
                print(f"Loading {csv_path} -> {table}")
                copy_csv(cur, table, cols, csv_path)

            # Reset sequences to MAX(pk)
            for table, pk in SEQS:
                cur.execute(
                    f"SELECT setval(pg_get_serial_sequence(%s,%s), COALESCE((SELECT MAX({pk}) FROM {table}),0), true);",
                    (table, pk)
                )

        conn.commit()
        print("CSV load complete.")
    except Exception as e:
        conn.rollback()
        print("Error:", e)
        raise
    finally:
        conn.close()

if __name__ == "__main__":
    main()
